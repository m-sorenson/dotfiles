" neobundle config
source ~/.vim/neobundle.vim

" neocomplete config
source ~/.vim/neocomplete.vim

" custom key mappings
source ~/.vim/key_mappings.vim


let g:gitgutter_max_signs = 500  " default value

set background=dark
color material-theme
" gvim
if has('gui_running')
	set guioptions-=L
	set guioptions-=r
	set guioptions-=T
	set guioptions-=m
	set guifont=hermit\ 10
endif

" vimfiler settings
let g:vimfiler_as_default_explorer = 1

syntax on

"autocmd FileType javascript setlocal omnifunc=tern#Complete

" numbers
"autocmd FocusLost   * :set number
"autocmd FocusGained * :set relativenumber
autocmd InsertEnter * :set number
autocmd InsertLeave * :set relativenumber
set relativenumber
" cursor
let &t_SI = "\<Esc>]50;CursorShape=1\x7" " Vertical bar in insert mode
let &t_EI = "\<Esc>]50;CursorShape=0\x7" " Block in normal mode(

"Airline
let g:airline#extensions#tabline#enabled = 1
set laststatus=2
let g:airline_theme="simple"

" Rainbows
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces

" Cursor
if has('gui_running')
    au WinLeave * set nocursorline nocursorcolumn
    au WinEnter * set cursorline cursorcolumn
    set cursorline cursorcolumn
endif

set tabstop=2
set shiftwidth=2
set expandtab
set shell=/bin/sh

" Whitespace remove
au BufWritePre * :%s/\s\+$//e
"
highlight TrailingWhitespace ctermbg=red guibg=red
au Syntax * syn match TrailingWhitespace /\s\+$/
match TrailingWhitespace /\s\+$/

" FileType Options
au FileType erlang setlocal tabstop=4
au FileType erlang setlocal shiftwidth=4

"
" FUNCTIONS
"
function! JSFormat()
    " Preparation: save last search, and cursor position.
    let l:win_view = winsaveview()
    let l:last_search = getreg('/')
    let fileWorkingDirectory = expand('%:p:h')
    let currentWorkingDirectory = getcwd()
    execute ':lcd' . fileWorkingDirectory
    execute ':silent' . '%!esformatter'
    if v:shell_error
        undo
        "echo "esformatter error, using builtin vim formatter"
        " use internal formatting command
        execute ":silent normal! gg=G<cr>"
    endif
    " Clean up: restore previous search history, and cursor position
    execute ':lcd' . currentWorkingDirectory
    call winrestview(l:win_view)
    call setreg('/', l:last_search)
endfunction

